{"id":"index.html","dependencies":[{"name":"./style.css","dynamic":true,"resolved":"/Users/xmasuhai/Documents/jirengu/xmasuhai.github.io-generator/public/demo-test/canvas-demo-1/style.css","parent":"/Users/xmasuhai/Documents/jirengu/xmasuhai.github.io-generator/public/demo-test/canvas-demo-1/index.html"},{"name":"./style.scss","dynamic":true,"resolved":"/Users/xmasuhai/Documents/jirengu/xmasuhai.github.io-generator/public/demo-test/canvas-demo-1/style.scss","parent":"/Users/xmasuhai/Documents/jirengu/xmasuhai.github.io-generator/public/demo-test/canvas-demo-1/index.html"},{"name":"/Users/xmasuhai/package.json","includedInParent":true,"mtime":1581239564482}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <link rel=\"stylesheet\" href=\"/da232d78aa810382f2dcdceae308ff8e.css\">\n    <link rel=\"stylesheet/scss\" href=\"/f75cdbcea8034badbb1b7f8097fcb138.css\">\n    <title>画板</title>\n</head>\n\n<body>\n    <!-- <div id=\"canvas\"></div> -->\n    <!-- <script>\n        canvas.onclick = (e) => {\n            //console.log()调试大法\n            console.log(e.clientX, e.clientY)\n                //创建div 在内存里，并不在页面（文档里）\n            let div = document.createElement('div')\n                //绝对定位\n            div.style.position = 'absolute'\n            div.style.left = e.clientX + 'px'\n            div.style.top = e.clientY + 'px'\n                // div.style.border = '1px solid red'\n            div.style.width = '6px'\n            div.style.height = '6px'\n                //点出现在鼠标中间，而不是右下角\n            div.style.marginLeft = '-3px'\n            div.style.marginTop = '-3px'\n                //由方变圆\n            div.style.borderRadius = '50%'\n            div.style.backgroundColor = 'black'\n\n            //添加已在内存中创建的节点\n            canvas.appendChild(div)\n        }\n    </script> -->\n\n    <canvas id=\"canvas\" width=\"100\" height=\"100\"></canvas>\n    <script>//面条代码思路\n//设置canvas大小\nvar canvas = document.getElementById(\"canvas\");\ncanvas.width = document.documentElement.clientWidth;\ncanvas.height = document.documentElement.clientHeight; // console.log(document.body.clientWidth)\n//样式\n\nvar ctx = canvas.getContext(\"2d\"); //填充色\n\nctx.fillStyle = \"orange\"; //描边\n\nctx.strokeStyle = 'black'; //线粗\n\nctx.lineWidth = 8; //转折处圆润\n\nctx.lineCap = 'round'; //加开关标记\n\nvar painting = false; //记录上次位置\n\nvar last; //抽象一个画线的函数\n\nfunction drawLine(x1, y1, x2, y2) {\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.stroke();\n} //判断触屏设备\n\n\nvar isTouchDevice = 'ontouchstart' in document.documentElement; //console.log(isTouchDevice);//切换控制台PC/触屏模式\n\nif (isTouchDevice === true) {\n  // console.log('目前什么也不写');\n  //代替onmousedown事件\n  canvas.ontouchstart = function (e) {\n    painting = true; //单指触屏的坐标\n\n    var x = e.touches[0].clientX;\n    var y = e.touches[0].clientY;\n    last = [x, y];\n  };\n\n  canvas.ontouchend = function () {\n    painting = false;\n  }; //监听触屏移动事件\n\n\n  canvas.ontouchmove = function (e) {\n    if (painting === true) {\n      // console.log(e.touches[0]);//获取第一个手指\n      var x = e.touches[0].clientX;\n      var y = e.touches[0].clientY; // console.log(x, y)\n      // //以点连线\n      // ctx.beginPath();\n      // ctx.arc(x, y, 10, 0, 2 * Math.PI);\n      // ctx.fill()\n      // ctx.stroke();\n      //连贯的线\n\n      drawLine(last[0], last[1], x, y);\n      last = [x, y];\n    } else {\n      console.log('什么都不做');\n    }\n  };\n} else {\n  // 监听三个鼠标事件\n  //动作\n  canvas.onmousedown = function (e) {\n    painting = true;\n    last = [e.clientX, e.clientY];\n  };\n\n  canvas.onmouseup = function () {\n    painting = false;\n  }; //画之前需要判断鼠标状态\n\n\n  canvas.onmousemove = function (e) {\n    if (painting === true) {\n      // console.log(e.clientX)\n      // console.log(e.clientY)\n      // //矩形\n      // ctx.fillRect(e.clientX - 5, e.clientY - 5, 10, 10)\n      // //划不连贯的“线”\n      // ctx.beginPath();\n      // ctx.arc(e.clientX, e.clientY, 10, 0, 2 * Math.PI);\n      // ctx.fill()\n      // ctx.stroke();\n      drawLine(last[0], last[1], e.clientX, e.clientY);\n      last = [e.clientX, e.clientY];\n    } else {\n      console.log('什么都不做');\n    }\n  };\n}</script>\n    <!-- <script>\n        //设置canvas大小\n        let canvas = document.getElementById(\"canvas\");\n        canvas.width = document.documentElement.clientWidth;\n        canvas.height = document.documentElement.clientHeight;\n        // console.log(document.body.clientWidth)\n\n        //样式\n        let ctx = canvas.getContext(\"2d\");\n        //填充色\n        ctx.fillStyle = \"black\";\n        //描边\n        ctx.strokeStyle = 'none';\n\n        // //画三角\n        // ctx.beginPath();\n        // ctx.moveTo(0, 0);\n        // ctx.lineTo(500, 500);\n        // ctx.lineTo(0, 500);\n        // ctx.closePath();\n        // ctx.stroke();\n\n        //抽象一个画线的函数\n        function drawLine(x1, x2, y1, y2) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n        }\n\n        let painting = false;\n        let isTouchDevice = 'ontouchstart' in document.documentElement;\n    </script> -->\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"17d051ee495d60977f473253b19aa5d6","cacheData":{"env":{}}}